rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {
    // Helper function to check if user is authenticated
    function isAuthenticated() {
      return request.auth != null;
    }
    
    // Helper function to check if user owns the document
    function isOwner(userId) {
      return isAuthenticated() && request.auth.uid == userId;
    }

    // API Keys collection rules
    match /api_keys/{keyId} {
      // Allow read if user is authenticated and the key belongs to them
      allow read: if isAuthenticated() && resource.data.userId == request.auth.uid;
      
      // Allow listing keys if user is authenticated
      allow list: if isAuthenticated() && request.query.filters.userId == request.auth.uid;
      
      // Allow create if user is authenticated and sets themselves as owner
      allow create: if isAuthenticated() && 
                   request.resource.data.userId == request.auth.uid &&
                   request.resource.data.key is string &&
                   request.resource.data.name is string &&
                   request.resource.data.providerName is string;
      
      // Allow delete if user owns the key
      allow delete: if isAuthenticated() && resource.data.userId == request.auth.uid;
      
      // Allow update if user owns the key
      allow update: if isAuthenticated() && 
                   resource.data.userId == request.auth.uid &&
                   request.resource.data.userId == request.auth.uid;
    }

    // User settings collection rules
    match /user_settings/{userId} {
      // Allow read/write if the document ID matches the user's ID
      allow read, write: if request.auth.uid == userId;
    }
  }
}
